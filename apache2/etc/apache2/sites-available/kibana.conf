<VirtualHost *:80>
	ServerAdmin root@localhost
	ServerName app1.<kibana-host>
	ServerAlias app1.<kibana-host>

	ErrorLog ${APACHE_LOG_DIR}/error.log

	# Possible values include: debug, info, notice, warn, error, crit,
	# alert, emerg.
	LogLevel warn

	CustomLog ${APACHE_LOG_DIR}/access.log combined

	# On vérifie s'il s'agit d'un accès aux settings
	# Init
	SetEnvIfNoCase Remote_Addr "^" post_delete=0
	SetEnvIfNoCase Remote_Addr "^" url_admin=0
	SetEnvIfNoCase Remote_Addr "^" acces_admin=1
	# 1ere passe de tests
	SetEnvIfNoCase Request_Method "POST" post_delete=1
	SetEnvIfNoCase Request_Method "DELETE" post_delete=1
	# URL à interdire
	SetEnvIfNoCase Request_URI "/elasticsearch/.<kibana-app-index>/index-pattern/" url_admin=1
	SetEnvIfNoCase Request_URI "/elasticsearch/.<kibana-app-index>/config/" url_admin=1
	# URL à autoriser
	SetEnvIfNoCase Request_URI "/elasticsearch/.<kibana-app-index>/index-pattern/_" url_admin=0
	# Conjonction (Si une des sous-var vaut 0 => résultat vaut 0)
	SetEnvIfNoCase post_delete 0 acces_admin=0
	SetEnvIfNoCase url_admin 0 acces_admin=0
	SetEnvIfNoCase acces_admin 1 block_admin

	# Accès à la racine => pas la peine de restreindre
	<LocationMatch "^/*$">
		ProxyPassMatch http://localhost:<kibana-port>
		ProxyPassReverse http://localhost:<kibana-port>
	</LocationMatch>

	# Accès pour les utilisateurs autorisés
	<LocationMatch "^/(.*)$">
		# Authentification
		AuthType Basic
		AuthName "USERS Kibana"
		AuthbasicProvider file
		AuthUserFile /etc/apache2/users
		# Autorisation
		AuthGroupFile /etc/apache2/groups
		Require group kibana

		ProxyPassMatch http://localhost:<kibana-port>/$1
		ProxyPassReverse http://localhost:<kibana-port>/$1

		# Commenter les 3 lignes ci-dessous pour permettre la modification des settings dans Kibana (ajout d'un Index pattern par exemple)
		Order allow,deny
		Allow from All
		Deny from env=block_admin
	</LocationMatch>

</VirtualHost>
